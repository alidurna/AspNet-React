/*
 * Priority.cs - GÃ¶rev Ã–ncelik Enum'u
 * ==================================
 * 
 * Bu enum gÃ¶revlerin Ã¶ncelik seviyelerini tanÄ±mlar.
 * Entity Framework bu enum'u veritabanÄ±nda integer olarak saklar.
 * 
 * ENUM KULLANIM AVANTAJLARI:
 * ==========================
 * - Type Safety: Sadece tanÄ±mlÄ± deÄŸerler kullanÄ±labilir
 * - IntelliSense: IDE otomatik tamamlama saÄŸlar  
 * - Maintenance: Yeni Ã¶ncelik seviyesi eklemek kolay
 * - Readability: Kod daha okunabilir (1 yerine Priority.High)
 * 
 * VERÄ°TABANI MAPPING:
 * ==================
 * Low = 0, Normal = 1, High = 2, Critical = 3 (integer deÄŸerler)
 */

using System.ComponentModel.DataAnnotations;

namespace TaskFlow.API.Models;

/// <summary>
/// GÃ¶rev Ã¶ncelik seviyelerini tanÄ±mlayan enum
/// VeritabanÄ±nda integer olarak saklanÄ±r (0, 1, 2, 3)
/// </summary>
public enum Priority
{
    /// <summary>
    /// DÃ¼ÅŸÃ¼k Ã¶ncelik - Acil olmayan, erteletilebilir gÃ¶revler
    /// DeÄŸer: 0 (veritabanÄ±nda)
    /// Ã–rnek: "Kitap okumak", "BahÃ§e iÅŸleri"
    /// Renk Ã¶nerisi: ğŸŸ¢ YeÅŸil (#27AE60)
    /// </summary>
    [Display(Name = "DÃ¼ÅŸÃ¼k", Description = "Acil olmayan gÃ¶revler")]
    Low = 0,

    /// <summary>
    /// Normal Ã¶ncelik - GÃ¼nlÃ¼k rutin gÃ¶revler
    /// DeÄŸer: 1 (veritabanÄ±nda)
    /// Ã–rnek: "E-posta kontrolÃ¼", "AlÄ±ÅŸveriÅŸ"
    /// Renk Ã¶nerisi: ğŸ”µ Mavi (#3498DB)
    /// </summary>
    [Display(Name = "Normal", Description = "GÃ¼nlÃ¼k rutin gÃ¶revler")]
    Normal = 1,

    /// <summary>
    /// YÃ¼ksek Ã¶ncelik - Ã–nemli ve zamanÄ±nda tamamlanmasÄ± gereken gÃ¶revler
    /// DeÄŸer: 2 (veritabanÄ±nda)
    /// Ã–rnek: "Proje teslimi", "Ã–nemli toplantÄ±"
    /// Renk Ã¶nerisi: ğŸŸ  Turuncu (#F39C12)
    /// </summary>
    [Display(Name = "YÃ¼ksek", Description = "Ã–nemli gÃ¶revler")]
    High = 2,

    /// <summary>
    /// Kritik Ã¶ncelik - Acil, hemen yapÄ±lmasÄ± gereken gÃ¶revler
    /// DeÄŸer: 3 (veritabanÄ±nda)  
    /// Ã–rnek: "Acil bug fix", "Deadline'Ä± geÃ§miÅŸ gÃ¶rev"
    /// Renk Ã¶nerisi: ğŸ”´ KÄ±rmÄ±zÄ± (#E74C3C)
    /// </summary>
    [Display(Name = "Kritik", Description = "Acil gÃ¶revler")]
    Critical = 3
}

/*
 * ENUM KULLANIM Ã–RNEKLERÄ°:
 * ========================
 * 
 * // Enum deÄŸeri atama
 * var task = new TodoTask 
 * {
 *     Title = "Proje teslimi",
 *     Priority = Priority.Critical
 * };
 * 
 * // Enum karÅŸÄ±laÅŸtÄ±rma
 * if (task.Priority >= Priority.High)
 * {
 *     // YÃ¼ksek Ã¶ncelikli gÃ¶rev iÅŸlemleri
 * }
 * 
 * // LINQ filtreleme
 * var highPriorityTasks = tasks.Where(t => t.Priority >= Priority.High).ToList();
 * 
 * // Display attribute kullanÄ±mÄ±
 * var displayName = Priority.Critical.GetDisplayName(); // "Kritik"
 * 
 * FRONTEND KULLANIMI:
 * ==================
 * - Badge/chip renklemesi iÃ§in
 * - SÄ±ralama iÃ§in (Critical -> High -> Normal -> Low)
 * - Filtreleme dropdown'larÄ± iÃ§in
 * - Progress bar'larda priority gÃ¶sterimi iÃ§in
 * 
 * VERÄ°TABANI BEST PRACTICES:
 * ==========================
 * - Enum deÄŸerleri explicit set edilmiÅŸ (0,1,2,3)
 * - Yeni Ã¶ncelik seviyesi eklenirse en sona eklenmeli
 * - Mevcut deÄŸerler deÄŸiÅŸtirilmemeli (data consistency)
 */ 